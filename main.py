#!/usr/bin/env python3

import yaml
import argparse

parser = argparse.ArgumentParser()
parser.add_argument("infile", help="The yaml file you want to convert")
args = parser.parse_args()
tab = '     '
with open(args.infile, 'r') as stream:
    try:
        print("# File generated by yaml2ssh")
        data = yaml.safe_load(stream)
        for group in data:
            config = data[group]
            keys = [key for key in config if key != 'Hosts']
            hosts = config['Hosts']
            for host in hosts:
                # If host is a string, there won't be any config overrides
                if isinstance(host, str):
                    hostkeys = keys
                    hostconfig = []
                else:
                    x = sorted(host)[0]
                    hostkeys = keys + list(set(host[x]) - set(keys))
                    hostconfig = host[x]
                    host = x
                print('Host {}'.format(host))
                if 'Hostname' not in hostkeys:
                    print('{}Hostname {}'.format(tab, host))
                for key in hostkeys:
                    # Host config overrides the general config
                    if key in hostconfig:
                        if hostconfig[key]:
                            print('{}{} {}'.format(tab, key, hostconfig[key]))
                    else:
                        print('{}{} {}'.format(tab, key, config[key]))
    except yaml.YAMLError as exc:
        print(exc)
