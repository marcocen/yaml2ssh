#!/usr/bin/env python3

import yaml
import argparse

parser = argparse.ArgumentParser()
parser.add_argument("infile", help="The yaml file you want to convert")
args = parser.parse_args()
tab = '     '
try:
    with open(args.infile, 'r') as stream:
        try:
            data = yaml.safe_load(stream)
            print("# File generated by yaml2ssh")
            for group in data:
                config = data[group]
                keys = [key for key in config if key != 'Hosts']
                hosts = config['Hosts']
                for host in hosts:
                    # If host is a string, there won't be any config overrides
                    if isinstance(host, str):
                        hostkeys = keys
                        hostconfig = []
                    else:
                        x = sorted(host)[0]
                        hostkeys = keys + list(set(host[x]) - set(keys))
                        hostconfig = host[x]
                        host = x
                    print('Host {}'.format(host))
                    if 'Hostname' not in hostkeys: print('{}Hostname {}'.format(tab, host))
                    for key in hostkeys:
                        # Host config overrides the general config
                        if key in hostconfig and hostconfig[key]: value = hostconfig[key]
                        else: value = config[key]
                        if isinstance(value,list):
                            for entry in value:
                                print('{}{} {}'.format(tab, key, entry))
                        else:
                            print('{}{} {}'.format(tab, key, value))
        except yaml.YAMLError as exc:
            print("Found an error parsing the file")
except FileNotFoundError:
    print("File {} was not found".format(args.infile))
except PermissionError:
    print("Could not read file {}".format(args.infile))
